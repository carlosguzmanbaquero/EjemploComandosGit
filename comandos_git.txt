//crear repositorio local
git init

//configurar usuario y correo 
git config --global user.email "you@example.com"
 git config --global user.name "Tu Nombre"

//obtener ayuda sobre un comando
git comando --help

//ver configuracion del ambiente git
git config -l

//descargar archivos
git clone url

//agregar
git add .

//commit con add implicito
git commit -am "mensaje"

//realizar commit
git commit -m "segundo y tercer proyecto"

//descargar al repositorio local
git fetch

//descargar al directorio y al repositorio local
git pull

//ver historial de cambios
git log nombre_archivo

//ver cambios
git show nombre_archivo

//comparar versiones
git diff 

//volver a una version anterior de commit
git reset id_commit --hard

//ver cantidad de cambios en cada archivo
git log --stat

//trae el archivo del commit especifico
git checkout id_commit archivo

//trae la ultima version de un archivo
git checkout master archivo

//crear rama
git branch nombre_rama

//cambiar de rama
git checkout nombre_rama

//listar ramas
git branch

//mezclar ramas
git merge nombre_rama 

//ver historial de ramas
git show-branch 
git show-branch --all

//crear un origen remoto
git remote add origin url_repositorio

//descargar todos los archivos presentes remotamente
git pull origin master --allow-unrelated-histories

//subir la rama master
git push origin master

//remover origin
git remote rm origin

//generar clave publica y privada
ssh-keygen -t rsa -b 4096 -C "email"

//evaluar si el agente de llaves esta activo
eval $(ssh-agent -s)

//agregar llave al sistema
ssh-add ~/.ssh/id_rsa

//mostrar log de una manera grafica
git log --all --graph --decorate --oneline

//crear alias
alias arbol_git="git log --all --graph --decorate --oneline"

//crear un tag
git tag -a v0.1 -m "primera version estable" id_hash

//listar tag
git tag

//referncia a la que esta amarrado el tag
git show-ref --tags

//subir los tags a github
git push origin --tags

//eliminar tag localmente
git tag -d nombre_tag

//eliminar tag de github
git push origin :refs/tags/nombre_tag

//pegar una rama en otra (se debe estar en la rama que tiene la informaci√≥n que desea pegar en la rama destino)
git rebase nombre_rama_destino_a_pegar

//guarda temporalmente sin realizar commit, y te devuelve el contenido del anterior commit
git stash

//listado de lo guardado en stash
git stash list

//traer lo guardado en stash
git stash pop

//borrar el contenido de stash
git stash drop

//crear una rama con el contenido de stash
git stash branch nombre_nueva_rama

//borrar los archivos queno deseas subir al repo
git clean -f

//ver que archivos se van a borrar
git clean --dry-run

//traer un commit de otra rama
git cherry-pick id_commit

//guarda cambios en el commit anterior
git commit --amend

//traer la historia completo de commits
git reflog

//buscar contenido en el proyecto
git grep palabra_a_buscar

//buscar contenido en el proyecto y me informe en que linea
git grep -n palabra_a_buscar

//buscar contenido en los commit realizados
git log -S "palabra a buscar"

//comando para saber cuantos commits ha realizado cada colaborador
git shortlog -sn --all --no-merges

//agregar alias en git
git config --global alias.nombre_alias "comando git"
git config --global alias.stats "git shortlog -sn --all --no-merges"

//ver quien realizo liea por linea un archivo
git blame -c nombre_archivo

//ver ramas remotas
git branch -r

//ver todas las ramas
git branch -a


